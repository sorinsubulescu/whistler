 version: '3'
 services:
  mongodb:
     image: "mongo:3.6"
     container_name: "mdcs_mongodb"
     volumes:
       - mongo_db:/data/db
     ports:
       - ${MONGO_PORT}:27017
 
  rabbitmq:
     image: "rabbitmq:3.8"
     container_name: "mdcs_rabbitmq"
     ports:
      - ${RABBITMQ_PORT}:5672

  mongomigration:
     image: "opswatprivate/mdcloudservices_mongo-migrations:${BRANCH}"
     container_name: "mdcs_mongomigrations"
     volumes:
       - mongo_backup:/backup
     depends_on: 
       - mongodb
     environment:
       - BACKUPS_TO_KEEP=${BACKUPS_TO_KEEP}
       - MONGO_PORT=${MONGO_PORT}
       - MONGO_MIGRATION_PORT=${MONGO_MIGRATION_PORT}

  licensingservice:
    image: "opswatprivate/mdcloudservices_licensing:${BRANCH}"
    container_name: "mdcs_licensingservice"
    depends_on:
      - mongodb
    restart: on-failure
    ports:
      - ${GRPC_PORT}:5000
    mac_address: ${MAC_ADDRESS}
    hostname: ${HOSTNAME}
    environment:
      - WAIT_HOSTS=mongodb:${MONGO_PORT}, mongomigration:${MONGO_MIGRATION_PORT}
      - LICENSINGSERVICE_URL=mdcs_licensingservice
      - GRPC_PORT=${GRPC_PORT}
      - MONGO_URL=mongodb://mongodb:${MONGO_PORT}

  discoveryservice:
    image: "opswatprivate/mdcloudservices_s3-discovery:${BRANCH}"
    container_name: "mdcs_discoveryservice"
    depends_on:
      - rabbitmq
      - mongodb
    restart: on-failure
    environment:
      - WAIT_HOSTS=mongodb:${MONGO_PORT}, mongomigration:${MONGO_MIGRATION_PORT}, rabbitmq:${RABBITMQ_PORT}
      - RABBITMQ_URL=rabbitmq
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - MONGO_URL=mongodb://mongodb:${MONGO_PORT}

  scanningservice:
    image: "opswatprivate/mdcloudservices_scanning:${BRANCH}"
    container_name: "mdcs_scanningservice"
    depends_on:
      - rabbitmq
      - mongodb
    restart: on-failure
    environment:
      - WAIT_HOSTS=mongodb:${MONGO_PORT}, mongomigration:${MONGO_MIGRATION_PORT}, rabbitmq:${RABBITMQ_PORT}
      - RABBITMQ_URL=rabbitmq
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - MONGO_URL=mongodb://mongodb:${MONGO_PORT}

  apigateway:
    image: "opswatprivate/mdcloudservices_api:${BRANCH}"
    container_name: "mdcs_apigateway"
    depends_on:
      - rabbitmq
      - mongodb
      - licensingservice
    restart: on-failure
    environment:
      - WAIT_HOSTS=mongodb:${MONGO_PORT}, mongomigration:${MONGO_MIGRATION_PORT}, rabbitmq:${RABBITMQ_PORT}, licensingservice:${GRPC_PORT}
      - LICENSINGSERVICE_URL=http://licensingservice
      - GRPC_PORT=5000
      - RABBITMQ_URL=rabbitmq
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - MONGO_URL=mongodb://mongodb:${MONGO_PORT}
      - ASPNETCORE_URLS=http://+
    ports:
      - ${APIGATEWAY_PORT}:80
      - ${APIGATEWAY_PORT_SSL}:443

  webclient:
    image: "opswatprivate/mdcloudservices_web:${BRANCH}"
    container_name: "mdcs_webclient"
    restart: on-failure
    ports:
      - ${WEB_PORT}:80
      - ${WEB_PORT_SSL}:443

  jobdispatcher:
    image: "opswatprivate/mdcloudservices_job-dispatcher:${BRANCH}"
    container_name: "mdcs_jobdispatcher"
    depends_on:
      - rabbitmq
      - mongodb
    restart: on-failure
    environment:
      - WAIT_HOSTS=mongodb:${MONGO_PORT}, mongomigration:${MONGO_MIGRATION_PORT}, rabbitmq:${RABBITMQ_PORT}
      - RABBITMQ_URL=rabbitmq
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - MONGO_URL=mongodb://mongodb:${MONGO_PORT}

  postactionsservice:
    image: "opswatprivate/mdcloudservices_post-actions:${BRANCH}"
    container_name: "mdcs_postactionsservice"
    depends_on:
      - rabbitmq
      - mongodb
    restart: on-failure
    environment:
      - WAIT_HOSTS=mongodb:${MONGO_PORT}, mongomigration:${MONGO_MIGRATION_PORT}, rabbitmq:${RABBITMQ_PORT}
      - RABBITMQ_URL=rabbitmq
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - MONGO_URL=mongodb://mongodb:${MONGO_PORT}

 volumes:
   mongo_db:
   mongo_backup:
